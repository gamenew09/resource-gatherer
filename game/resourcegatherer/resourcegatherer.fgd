@include "hl2mp.fgd"

@PointClass base(Targetname) = rg_resource_taker : "An entity that allows for taking resources. This entity should be used for shops"
[
	bio_cost(integer) : "Biological Resource Cost" : 0 : "How many biological resources should be taken."
	mech_cost(integer) : "Mechanical Resource Cost" : 0 : "How many mechanical resources should be taken."
	energy_cost(integer) : "Energy Resource Cost" : 0 : "How many energy resources should be taken."

	one_time(choices) : "One Time" : 1 : "Should this resource taker only work once?" = 
	[
		"0": "No"
		"1": "Yes"
	]

	input TakeResources(void) : "Takes the resources from the resource pool."
	input ResetActivationState(void) : "If the resource taker has already been activated, it will allow the resource taker to be activated again."

	output OnResourcesTaken(void) : "Called when resources have been successfully taken."
	output OnResourcesTakenFailed(void) : "Called when resources have not been taken."
	output OnAttemptTakeButAlreadyTaken(void) : "Called when resources have not been taken because the resource taker can only take resources once, unless reset by ResetActivationState."
]

@PointClass base(Targetname) = rg_resourcepickup : "An entity that gives some resource of a type"
[
	resource_type(choices) : "Resource Type" : 1 : "What resource will be given when picked up." =
	[
		"1": "Biological"
		"2": "Mechanical"
		"3": "Energy"
	]
	worth(integer) : "Worth" : 1 : "How much resources will be given when picked up."

	output OnPickedUp(void) : "Called when this resource pickup has been picked up."
]

@NPCClass base(BaseCombine) studio("models/Combine_Soldier.mdl") = npc_combine_s : "Combine Soldier"
[
	input Assault(string) : "Start an assault. Parameter passed in should be the name of the rally point."

	model(choices) : "Model" : "models/combine_soldier.mdl" : "Regular Soldier" = 
	[
		"models/combine_soldier.mdl" : "Regular Soldier"
		"models/combine_soldier_prisonguard.mdl" : "Nova Prospekt Soldier"
		"models/combine_super_soldier.mdl" : "Elite Soldier"
	]

	tacticalvariant(choices) : "Tactical Variant" : "0" =
	[
		"0" : "Normal Tactics"
		"1" : "Pressure the enemy (Keep advancing)"
		"2" : "Pressure until within 30ft, then normal"
	]
	
	usemarch(choices) : "Walk Easy" : "0" : "When true, will use a variety of more casual walking animations instead of the standard walk. For use in crowds. WARNING: this animation only has a north component. For use under very special circumstances only." =
	[
		"0" : "No"
		"2" : "Yes"
	]
]

